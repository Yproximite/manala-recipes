name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - ".github/**"
  pull_request:
    paths-ignore:
      - ".github/**"
    types:
      - opened
      - reopened
      - synchronize
      - labeled

concurrency:
  cancel-in-progress: true
  group: ci-${{ github.ref }}

env:
  TZ: UTC
  PHP_VERSION: 7.4
  NODE_VERSION: 10
  COMPOSER_CACHE_DIR: '~/.composer/cache'
  COMPOSER_ALLOW_SUPERUSER: '1' # https://getcomposer.org/doc/03-cli.md#composer-allow-superuser
  COMPOSER_AUTH: '${{ secrets.COMPOSER_AUTH }}'

jobs:
  php:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check composer.json existence
        run: echo "composer_exist=$(test -f composer.json && echo 'true' || echo 'false')" >> $GITHUB_ENV

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
          extensions: ctype, iconv, intl
          ini-values: date.timezone=${{ env.TZ }}, memory_limit=-1, session.gc_probability=0, opcache.enable=1, opcache.enable_cli=1, opcache.memory_consumption=256, opcache.max_accelerated_files=20000, opcache.validate_timestamps=0, realpath_cache_size=4096K, realpath_cache_ttl=600
          tools: composer:v2, cs2pr
        if: env.composer_exist == 'true'

      - run: composer validate
        if: env.composer_exist == 'true'

      - uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
        if: env.composer_exist == 'true'

      - uses: ramsey/composer-install@v3
        with:
          composer-options: "--prefer-dist --optimize-autoloader"
        if: env.composer_exist == 'true'

      - run: $(composer config bin-dir)/php-cs-fixer fix -v --dry-run --using-cache=no
        if: env.composer_exist == 'true'

  javascript:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check package.json existence
        run: echo "package_exist=$(test -f package.json && echo 'true' || echo 'false')" >> $GITHUB_ENV

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
        if: env.package_exist == 'true'

      - run: yarn install
        if: env.package_exist == 'true'

      - run: yarn lint
        if: env.package_exist == 'true'

      - run: yarn build
        if: env.package_exist == 'true'

  auto_merge_composer_operation:
    runs-on: ubuntu-latest
    needs: [ php, javascript ]
    if: ${{ github.actor == 'yprox' && contains(github.event.pull_request.labels.*.name, 'bifrost:composer_operation') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Merge pull requests
        uses: pascalgn/automerge-action@v0.16.4
        env:
          GITHUB_TOKEN: "${{ secrets.GH_MANALA_SYNC_TOKEN }}"
          MERGE_LABELS: "bifrost:composer_operation"
          MERGE_DELETE_BRANCH: "true"
          MERGE_ERROR_FAIL: "true"
          MERGE_READY_STATE: "clean,has_hooks,unknown,unstable,blocked"

  auto_merge_dependabot:
    runs-on: ubuntu-latest
    needs: [php, javascript]
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          github-token: ${{ secrets.ACTION_DEPENDABOT_AUTO_MERGE_TOKEN }}
