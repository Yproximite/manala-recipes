manala:
    description: yProximite - Generic application with PHP and Node.js support
    template: .manala.yaml.tmpl
    sync:
        - .manala/ansible
        - .manala/docker
        - .manala/github
        - .manala/make
        - .manala/vagrant
        - .manala/.dockerignore
        - .manala/.gitignore
        - .manala/DO_NOT_MANUALLY_EDIT
        - .manala/Dockerfile.tmpl
        - .manala/Makefile.tmpl
        - .manala/Vagrantfile.tmpl
        - Makefile.tmpl
        - vagrant-wrapper.sh

system:
    # @option {"label": "System version"}
    # @schema {"enum": [10]}
    version: ~
    # @option {"label": "Hostname"}
    # @schema {"type": "string", "format": "domain"}
    hostname: ~
    # @schema {"type": ["integer", "null"]}
    memory: 2048
    # @schema {"type": ["integer", "null"]}
    cpus: 2
    # @schema {"type": ["string"], "pattern": "^[a-zA-Z]+/[a-zA-Z]+$"}
    timezone: Etc/UTC
    locales:
        # @schema {"type": ["string"]}
        default: C.UTF-8
        # @schema {"items": {"type": "string"}}
        codes: []
    # @schema {
    #     "additionalProperties": {"type": ["string", "integer"]},
    #     "propertyNames": {"pattern": "^[A-Z_]+$"}
    # }
    env: {}
    apt:
        # @schema {"items": {"type": "string"}}
        repositories: []
        # @schema {"items": {"type": "string"}}
        preferences: []
        # @schema {"items": {"type": "string"}}
        packages: []
        # @schema {"items": {"type": "string"}}
        holds: []
    # @schema {"items": {"type": "object"}}
    files: []
    nginx:
        # @schema {
        #     "items": {"type": "object",
        #         "additionalProperties": false,
        #         "properties": {
        #             "template": {"type": "string"},
        #             "file": {"type": "string"},
        #             "config": {"type": ["string", "array"]},
        #             "content": {"type": "string"}
        #         }
        #     }
        # }
        configs: []
    php:
        # @option {"label": "Php version"}
        # @schema {"enum": [null, "8.0", 7.4, 7.3, 7.2, 7.1, "7.0", 5.6]}
        version: ~
        # @schema {"items": {"type": "string"}}
        extensions: []
        # @schema {
        #     "items": {"type": "object",
        #         "additionalProperties": false,
        #         "properties": {
        #             "template": {"type": "string"},
        #             "file": {"type": "string"},
        #             "config": {"type": ["object", "string", "array"]}
        #         }
        #     }
        # }
        configs: []
        composer:
            # @schema {"enum": [null, 1]}
            version: ~
        blackfire:
            agent:
                config:
                    # @schema {"type": ["string", "null"]}
                    server_id: ~
                    # @schema {"type": ["string", "null"]}
                    server_token: ~
            client:
                config:
                    # @schema {"type": ["string", "null"]}
                    client_id: ~
                    # @schema {"type": ["string", "null"]}
                    client_token: ~
    nodejs:
        # @option {"label": "Nodejs version"}
        # @schema {"enum": [null, 14, 12, 10, 8, 6]}
        version: ~
        # @schema {"items": {"type": "object"}}
        packages: []
    mariadb:
        # @option {"label": "MariaDB version"}
        # @schema {"enum": [null, 10.5, 10.4, 10.3, 10.2, 10.1, "10.0"]}
        version: ~
    postgresql:
        # @option {"label": "PostgreSQL version"}
        # @schema {"enum": [null, 14, 12, 11, 10, 9.6]}
        version: ~
    redis:
        # @option {"label": "Redis version"}
        # @schema {"enum": [null, "*"]}
        version: ~
        # @schema {"type": ["object", "array"]}
        config: {}
    influxdb:
        # @option {"label": "InfluxDB version"}
        # @schema {"enum": [null, "*"]}
        version: ~
        # @schema {"type": ["object", "array"]}
        config: {}
        # @schema {"items": {"type": "string"}}
        databases: []
        # @schema {"items": {"type": "object"}}
        users: []
        # @schema {"items": {"type": "object"}}
        privileges: []
    ssh:
        client:
            # @schema {"type": ["null", "string", "array"]}
            config: ~
    docker:
        # @schema {"items": {"type": "object"}}
        containers: []
